[{"/Users/kube/Personal Projects/fake-imdb/src/index.js":"1","/Users/kube/Personal Projects/fake-imdb/src/App.js":"2","/Users/kube/Personal Projects/fake-imdb/src/reportWebVitals.js":"3","/Users/kube/Personal Projects/fake-imdb/src/globalState.js":"4","/Users/kube/Personal Projects/fake-imdb/src/components/header/Header.js":"5","/Users/kube/Personal Projects/fake-imdb/src/components/actor/Actor.js":"6","/Users/kube/Personal Projects/fake-imdb/src/components/show/Show.js":"7","/Users/kube/Personal Projects/fake-imdb/src/components/home/Home.js":"8","/Users/kube/Personal Projects/fake-imdb/src/components/footer/Footer.js":"9","/Users/kube/Personal Projects/fake-imdb/src/components/featureSelect/FeatureSelect.js":"10"},{"size":666,"mtime":1609366075057,"results":"11","hashOfConfig":"12"},{"size":1066,"mtime":1611827106452,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1609011833835,"results":"14","hashOfConfig":"12"},{"size":1143,"mtime":1611829045415,"results":"15","hashOfConfig":"12"},{"size":2976,"mtime":1611767622731,"results":"16","hashOfConfig":"12"},{"size":7594,"mtime":1611793282851,"results":"17","hashOfConfig":"12"},{"size":2118,"mtime":1611830432889,"results":"18","hashOfConfig":"12"},{"size":446,"mtime":1611706783520,"results":"19","hashOfConfig":"12"},{"size":595,"mtime":1611640422561,"results":"20","hashOfConfig":"12"},{"size":2930,"mtime":1611830664169,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1rds6am",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"24"},"/Users/kube/Personal Projects/fake-imdb/src/index.js",[],["50","51"],"/Users/kube/Personal Projects/fake-imdb/src/App.js",["52"],"import './App.css';\nimport React, { useEffect } from 'react'\nimport './components/header/Header'\nimport Header from './components/header/Header'\nimport { notActor } from './globalState'\nimport Actor from './components/actor/Actor'\nimport Show from './components/show/Show'\nimport Home from './components/home/Home'\nimport { useRecoilValue } from 'recoil'\nimport Footer from './components/footer/Footer'\nimport FeatureSelect from './components/featureSelect/FeatureSelect';\n\n\n\nfunction App() {\n\n    let pageView = useRecoilValue(notActor)\n    \n    console.log(pageView)\n    const ActorOrShow = () => {\n      if (pageView === 'home' || pageView === ''){\n        return <Home />\n      } else if(pageView === 'actor'){\n        return <Actor />\n      } else if (pageView === 'feature' || pageView === 'TV series'){\n        return <FeatureSelect />\n      } else if (pageView === 'selectedMovie'){\n        return <Show />\n      }\n    }\n\n  \n\n  return (\n    <div className=\"App\">\n      <Header />\n      <ActorOrShow />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/kube/Personal Projects/fake-imdb/src/reportWebVitals.js",[],"/Users/kube/Personal Projects/fake-imdb/src/globalState.js",[],"/Users/kube/Personal Projects/fake-imdb/src/components/header/Header.js",["53","54","55","56","57","58","59","60","61","62","63","64"],"import React, { Fragment, useEffect } from 'react'\nimport { useRecoilState } from 'recoil'\nimport { searchName, image, displayName, knownFor, actorId, actorImages, notActor, actorBio, actorFilmography} from '../../globalState.js'\nimport axios from 'axios'\nimport './header.css'\nimport purpleLogo from '../../images/fanatic-logo-2.png'\n\n\nfunction Header () {\n\n    const [useSearchName, setuseSearchName] = useRecoilState(searchName)\n    const [useImage, setuseImage] = useRecoilState(image)\n    const [useDisplayName, setuseDisplayname] = useRecoilState(displayName)\n    const [useKnownFor, setuseKnownFor] = useRecoilState(knownFor)\n    const [useActorId, setuseActorId] = useRecoilState(actorId)\n    const [useActorImages, setuseActorImages] = useRecoilState(actorImages)\n    const [isNotActor, setisNotActor] = useRecoilState(notActor)\n    const [useActorbio, setuseActorBio] = useRecoilState(actorBio)\n    const [useActorFilmography, setuseActorFilmography] = useRecoilState(actorFilmography)\n\n    // Initial call from user search\n    const fakeImdbSearch = () => {\n        const options = {\n            method: 'GET',\n            url: 'https://imdb8.p.rapidapi.com/title/auto-complete',\n            params: {q: useSearchName},\n            headers: {\n             'x-rapidapi-key': '1ddf0a8da3msh877010e622bf74dp10873cjsnd762a292965a',\n             'x-rapidapi-host': 'imdb8.p.rapidapi.com'\n            }\n        };\n  \n        axios.request(options).then(function (response) {\n            console.log(response.data)\n            setuseSearchName(response.data.d[0].l)\n            setuseImage(response.data.d[0].i.imageUrl)\n            setuseDisplayname(response.data.d[0].l)\n            setuseKnownFor(response.data.d[0].s)\n            setuseActorId(response.data.d[0].id)\n\n            let movieOrShow = response.data.d[0].q\n            if (movieOrShow) {\n                console.log('movie or show')\n                setisNotActor(movieOrShow)\n            } else {\n                setisNotActor('actor')\n                console.log('actor')\n            }\n\n            }).catch(function (error) {\n            console.error(error)\n            });\n          \n        clearSearch()\n    }\n  \n    const handleChange = event => {\n      setuseSearchName(event.target.value)\n    }\n\n    const clearSearch = () => {\n      document.getElementById('search').value = ''\n    }\n    \n    return(\n    <Fragment>\n    <header>\n      <a href='/'>\n        <img src={purpleLogo} id='fanLogo' alt='Fanatic Logo'/>\n      </a>\n        <div id='searchBB'>\n          <input id='search' type='text' placeholder='search movie, actor' onChange = {handleChange}></input>\n          <button id='searchButton' onClick={fakeImdbSearch}>SEARCH</button>\n        </div>\n    </header>\n      <h1>SEARCH TV, MOVIES AND ACTORS</h1>\n    </Fragment>\n    )\n\n}\nexport default Header","/Users/kube/Personal Projects/fake-imdb/src/components/actor/Actor.js",["65"],"import React, { useEffect } from 'react'\nimport './Actor.css'\nimport { useRecoilState } from 'recoil'\nimport { searchName, image, displayName, knownFor, actorId, actorImages, actorBio, actorFilmography} from '../../globalState.js'\nimport noPoster from '../../images/no_poster.png'\nimport leftButton from '../../images/arrow-left.png'\nimport rightButton from '../../images/arrow-right.png'\nimport scrollButtonDivider from '../../images/arrow-spacer.png'\nimport axios from 'axios'\n\nfunction Actor () {\n\n    const [useSearchName] = useRecoilState(searchName)\n    const [useImage] = useRecoilState(image)\n    const [useDisplayName] = useRecoilState(displayName)\n    const [useKnownFor] = useRecoilState(knownFor)\n    const [useActorId] = useRecoilState(actorId)\n    const [useActorImages, setuseActorImages] = useRecoilState(actorImages)\n    const [useActorbio, setuseActorBio] = useRecoilState(actorBio)\n    const [useActorFilmography, setuseActorFilmography] = useRecoilState(actorFilmography)\n\n\n\n    useEffect (() => {\n      if(useActorId.substr(0, 2) === 'nm'){\n      document.title = `FANatic - ${useDisplayName}`\n\n    // Call to get Actor bio info\n    const getBio = () => {\n\n      const options = {\n        method: 'GET',\n        url: 'https://imdb8.p.rapidapi.com/actors/get-bio',\n        params: {nconst: useActorId},\n        headers: {\n          'x-rapidapi-key': '1ddf0a8da3msh877010e622bf74dp10873cjsnd762a292965a',\n          'x-rapidapi-host': 'imdb8.p.rapidapi.com'\n        }\n        \n      };\n      \n      axios.request(options).then(function (response) {\n        setuseActorBio(response.data.miniBios[0].text)\n      }).catch(function (error) {\n        console.error(error);\n      });\n\n    }\n    getBio()\n\n\n    // Call to retrieve filmography\n    const getFilmography = () => {\n      console.log('hello')\n      const options = {\n        method: 'GET',\n        url: 'https://imdb8.p.rapidapi.com/actors/get-all-filmography',\n        params: {nconst: useActorId},\n        headers: {\n          'x-rapidapi-key': '1ddf0a8da3msh877010e622bf74dp10873cjsnd762a292965a',\n          'x-rapidapi-host': 'imdb8.p.rapidapi.com'\n        }\n      };\n      \n      axios.request(options).then(function (response) {\n        let allFilmography = response.data.filmography\n        console.log('right here fool', allFilmography)\n        setuseActorFilmography(allFilmography)\n        \n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n    getFilmography()\n\n    //Retrieves all actor images\n    const allImages = () => {\n      const options = {\n        method: 'GET',\n        url: 'https://imdb8.p.rapidapi.com/actors/get-all-images',\n        params: {nconst: useActorId},\n        headers: {\n          'x-rapidapi-key': '1ddf0a8da3msh877010e622bf74dp10873cjsnd762a292965a',\n          'x-rapidapi-host': 'imdb8.p.rapidapi.com'\n        }\n      };\n      \n      axios.request(options).then(function (response) {\n        console.log(response.data.resource.images)\n        setuseActorImages(response.data.resource.images)\n      }).catch(function (error) {\n        console.error(error)\n      });\n    }\n    allImages()\n  }\n  }, [useActorId])\n\n    const DisplayImages = () => {\n        let imageList = []\n        if (useActorImages.length > 50){\n          for(let image = 0; image < 50; image++){\n            imageList.push(<img key={ image } className='actorImages' alt={ useActorImages[image].caption } src={ useActorImages[image].url }></img>)\n          }\n        }\n        else {\n          for(let image = 0; image < useActorImages.length; image++){\n            imageList.push(<img key={ image } className='actorImages' alt={ useActorImages[image].caption } src={ useActorImages[image].url }></img>)\n          }\n        }\n        console.log(imageList.length)\n        return imageList\n      }\n\n    const DisplayFilmography = () => {\n      let titleAndRole = []\n      for(let role = 0; role < useActorFilmography.length; role++){\n        if (useActorFilmography[role].image){\n            titleAndRole.push(<div className='character'>\n                                <h6 className='title' key={ useActorFilmography[role].title }>{useActorFilmography[role].title}</h6>\n                                <h6 className='role' key={ useActorFilmography[role].characters }>{useActorFilmography[role].characters}</h6>\n                                <img key={ role } className='roleImage' alt= {useActorFilmography[role].characters} src={ useActorFilmography[role].image.url}></img>\n                                <h6 className='status' key={ -role - 1 }>{useActorFilmography[role].status}</h6>\n                              </div>)\n        } else {\n          titleAndRole.push(<div className='character'><h6 className='title'>{useActorFilmography[role].title}</h6><h6 className='role'>{useActorFilmography[role].characters}</h6><img key={ role } className='roleImage' alt= {useActorFilmography[role].characters} src={ noPoster } ></img><h6 className='status'>{useActorFilmography[role].status}</h6></div>)\n        }\n      }\n      return titleAndRole\n    }\n\n    const LeftScroll = () => {\n      document.getElementById('roles').scrollLeft -= 500\n    }\n\n    const RightScroll = () => {\n      document.getElementById('roles').scrollLeft += 500\n    }\n\n    const LeftScroll2 = () => {\n      document.getElementById('allImages').scrollLeft -= 500\n    }\n\n    const RightScroll2 = () => {\n      document.getElementById('allImages').scrollLeft += 500\n    }\n\n    return (\n        <div id='actorInfo'>\n            <div id='allBio'>\n                <div id='bio'>\n                <div id='imageHolder'>\n                  <div id='name'>\n                    <h2 id='knownFor1'>{useKnownFor.split(',')[0]}</h2>\n                    <h2 id='searchName'>{useDisplayName.split('(')[0]}</h2>\n                  </div>\n                  <img id='searchImage' src={useImage} alt={'Picture of ' + useSearchName}></img>\n                </div>\n                <div id='bioText'>\n                    <h2 id='knownForText'>Known For</h2>\n                    <h2 id='knownFor2'>{useKnownFor.split(',')[1]}</h2>\n                    <div id=\"personalBio\">\n                      <p id='actorBio'>{useActorbio}</p>\n                    </div>\n                </div>\n                \n                </div>\n                \n            </div>\n            <h2 id='filmographyTitle'>Filmography</h2>\n            <div id='filmography'>\n              <div id='roles'>\n                <DisplayFilmography />\n              </div>\n            </div>\n            <div id='filmScrollArrow'>\n              <button id='leftScroll1' onClick={ LeftScroll }><img id='leftButton1' src={ leftButton } alt='left scroll button' /></button>\n              <img id='arrowSpacer' alt='scroll button divider' src={scrollButtonDivider} />\n              <button id='rightScroll1' onClick={ RightScroll }><img id='rightButton1' src={rightButton} alt='right scroll button' /></button>\n            </div>\n            <h2 id='actorImages'>Images of {useDisplayName.split('(')[0]}</h2>\n            <div id='allImages'>\n                <DisplayImages />\n            </div>\n            <div id='filmScrollArrow'>\n              <button id='leftScroll1' onClick={ LeftScroll2 }><img id='leftButton1' src={ leftButton } alt='left scroll button' /></button>\n              <img id='arrowSpacer' alt='scroll button divider' src={scrollButtonDivider} />\n              <button id='rightScroll1' onClick={ RightScroll2 }><img id='rightButton1' src={rightButton} alt='right scroll button' /></button>\n            </div>\n        </div>\n    )\n}\n\nexport default Actor","/Users/kube/Personal Projects/fake-imdb/src/components/show/Show.js",["66","67","68","69","70","71","72","73"],"import React, { useEffect } from 'react'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { searchName, image, displayName, knownFor, actorId, actorImages, notActor, genres, rating, plot} from '../../globalState.js'\nimport './show.css'\nimport axios from 'axios'\n\n\nfunction Show () {\n    const [useDisplayName, setuseDisplayName] = useRecoilState(displayName)\n    const [useImage, setuseImage] = useRecoilState(image)\n    const [useActorImages] = useRecoilState(actorImages)\n    const [useActorId] = useRecoilState(actorId)\n    const [useGenres, setuseGenres] = useRecoilState(genres)\n    const [useRating, setuseRating] = useRecoilState(rating)\n    const [usePlot, setusePlot] = useRecoilState(plot)\n\n    useEffect (() => {\n        if(useActorId.substr(0, 2) === 'tt'){\n            document.title = `FANatic - ${useDisplayName}`\n\n            const options = {\n                method: 'GET',\n                url: 'https://imdb8.p.rapidapi.com/title/get-overview-details',\n                params: {tconst: useActorId, currentCountry: 'US'},\n                headers: {\n                'x-rapidapi-key': '1ddf0a8da3msh877010e622bf74dp10873cjsnd762a292965a',\n                'x-rapidapi-host': 'imdb8.p.rapidapi.com'\n                }\n            };\n      \n            axios.request(options).then(function (response) {\n                console.log(response.data, 'this is the one');\n                setuseImage(response.data.title.image.url)\n                setuseGenres(response.data.genres)\n                setuseRating(response.data.ratings.rating)\n                setusePlot(response.data.plotOutline.text)\n                setuseDisplayName(response.data.title.title)\n\n            }).catch(function (error) {\n                console.error(error);\n            });\n        }\n    }, [useActorId])\n\n    return(\n        <div id='movieInfo'>\n            <img id='moviePoster' alt='moviePoster' src={ useImage } />\n            <div id='movieData'>\n                <h1 id='movieTitle'>{ useDisplayName }</h1>\n                <p id='plot'>{usePlot}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Show","/Users/kube/Personal Projects/fake-imdb/src/components/home/Home.js",["74"],"import React from 'react'\nimport './home.css'\nimport logo from '../../images/fanaticlog-white.png'\nimport { useEffect } from 'react'\n\n\nfunction Home () {\n\n    \n    document.title = 'FANatic'\n    \n\n    return(\n        \n        <div id='homeHolder'>\n            <h1 id='welcome1'>WELCOME TO</h1>\n            <div id='logoHolder'>\n                <img id='logo' alt='logo' src={logo} />\n            </div>\n        </div>\n    )\n}\n\nexport default Home","/Users/kube/Personal Projects/fake-imdb/src/components/footer/Footer.js",[],["75","76"],"/Users/kube/Personal Projects/fake-imdb/src/components/featureSelect/FeatureSelect.js",["77","78","79","80","81","82","83","84","85","86","87","88","89"],"import React, { useEffect } from 'react'\nimport { useRecoilState } from 'recoil'\nimport { responseData } from '../../globalState'\nimport './featureSelect.css'\nimport noPoster from '../../images/no_poster.png'\nimport Show from '../show/Show'\nimport { searchName, image, displayName, knownFor, actorId, actorImages, actorBio, actorFilmography, notActor} from '../../globalState.js'\n\n\nfunction FeatureSelect () {\n    const [useResponseData] = useRecoilState(responseData)\n    const [useActorId, setuseActorId] = useRecoilState(actorId)\n    const [useNotActor, setuseNotActor] = useRecoilState(notActor)\n\n    const QueryCards = () => {\n        let dataList = useResponseData.d\n        let queryList = []\n        for(let query = 0; query < dataList.length; query++){\n            let poster\n            if(dataList[query].i){\n                poster = dataList[query].i.imageUrl\n            } else {\n                poster = noPoster\n            }\n            if(dataList[query].s){\n                let title = dataList[query].l\n                let year = dataList[query].y\n                let starring1 = dataList[query].s.split(',')[0]\n                let starring2 = dataList[query].s.split(',')[1]\n                let id = dataList[query].id\n            queryList.push(\n                <div className='queryItem'>\n                    <img key={ id } alt='search image' className='poster' src={ poster } id={ id }/>\n                    <div className='resultsInfo'>\n                        <h2 className='title2' key={ title }>{ title }</h2>\n                        <h2 className='year' key={ year }>{ year }</h2>\n                        <h2 className='starring' key={ query }>STARRING</h2>\n                        <h2 className='starring1' key={ starring1 }>{ starring1 }</h2>\n                        <h2 className='starring2' key={ starring2 }>{ starring2 }</h2>\n                    </div>\n                </div>\n            )\n            } else {\n                let title = dataList[query].l\n                let year = dataList[query].y\n                let id = dataList[query].id\n                queryList.push(\n                    <div className='queryItem'>\n                        <img key={ id } alt='search image' className='poster' src={ poster } />\n                        <div className='resultsInfo'>\n                            <h2 className='title2' key={ title }>{ title }</h2>\n                            <h2 className='year' key={ year }>{ year }</h2>\n                        </div>\n                    </div>\n                )\n            }\n        }\n        return queryList\n    }\n\n    window.onclick = e => {\n        console.log(e.target.id)\n        setuseActorId(e.target.id)\n        setuseNotActor('selectedMovie')\n    }\n\n    \n\n    return (\n        <div id='selectionHolder'>\n            <h1 id='searchResults'>Search Results</h1>\n            <QueryCards />\n        </div>\n    )\n}\n\nexport default FeatureSelect",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":2,"column":17,"nodeType":"96","messageId":"97","endLine":2,"endColumn":26},{"ruleId":"94","severity":1,"message":"95","line":1,"column":27,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"94","severity":1,"message":"98","line":12,"column":12,"nodeType":"96","messageId":"97","endLine":12,"endColumn":20},{"ruleId":"94","severity":1,"message":"99","line":13,"column":12,"nodeType":"96","messageId":"97","endLine":13,"endColumn":26},{"ruleId":"94","severity":1,"message":"100","line":14,"column":12,"nodeType":"96","messageId":"97","endLine":14,"endColumn":23},{"ruleId":"94","severity":1,"message":"101","line":15,"column":12,"nodeType":"96","messageId":"97","endLine":15,"endColumn":22},{"ruleId":"94","severity":1,"message":"102","line":16,"column":12,"nodeType":"96","messageId":"97","endLine":16,"endColumn":26},{"ruleId":"94","severity":1,"message":"103","line":16,"column":28,"nodeType":"96","messageId":"97","endLine":16,"endColumn":45},{"ruleId":"94","severity":1,"message":"104","line":17,"column":12,"nodeType":"96","messageId":"97","endLine":17,"endColumn":22},{"ruleId":"94","severity":1,"message":"105","line":18,"column":12,"nodeType":"96","messageId":"97","endLine":18,"endColumn":23},{"ruleId":"94","severity":1,"message":"106","line":18,"column":25,"nodeType":"96","messageId":"97","endLine":18,"endColumn":39},{"ruleId":"94","severity":1,"message":"107","line":19,"column":12,"nodeType":"96","messageId":"97","endLine":19,"endColumn":31},{"ruleId":"94","severity":1,"message":"108","line":19,"column":33,"nodeType":"96","messageId":"97","endLine":19,"endColumn":55},{"ruleId":"109","severity":1,"message":"110","line":97,"column":6,"nodeType":"111","endLine":97,"endColumn":18,"suggestions":"112"},{"ruleId":"94","severity":1,"message":"113","line":2,"column":26,"nodeType":"96","messageId":"97","endLine":2,"endColumn":40},{"ruleId":"94","severity":1,"message":"114","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":20},{"ruleId":"94","severity":1,"message":"115","line":3,"column":42,"nodeType":"96","messageId":"97","endLine":3,"endColumn":50},{"ruleId":"94","severity":1,"message":"116","line":3,"column":74,"nodeType":"96","messageId":"97","endLine":3,"endColumn":82},{"ruleId":"94","severity":1,"message":"102","line":11,"column":12,"nodeType":"96","messageId":"97","endLine":11,"endColumn":26},{"ruleId":"94","severity":1,"message":"117","line":13,"column":12,"nodeType":"96","messageId":"97","endLine":13,"endColumn":21},{"ruleId":"94","severity":1,"message":"118","line":14,"column":12,"nodeType":"96","messageId":"97","endLine":14,"endColumn":21},{"ruleId":"109","severity":1,"message":"119","line":43,"column":8,"nodeType":"111","endLine":43,"endColumn":20,"suggestions":"120"},{"ruleId":"94","severity":1,"message":"95","line":4,"column":10,"nodeType":"96","messageId":"97","endLine":4,"endColumn":19},{"ruleId":"90","replacedBy":"121"},{"ruleId":"92","replacedBy":"122"},{"ruleId":"94","severity":1,"message":"95","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"123","line":6,"column":8,"nodeType":"96","messageId":"97","endLine":6,"endColumn":12},{"ruleId":"94","severity":1,"message":"114","line":7,"column":10,"nodeType":"96","messageId":"97","endLine":7,"endColumn":20},{"ruleId":"94","severity":1,"message":"124","line":7,"column":22,"nodeType":"96","messageId":"97","endLine":7,"endColumn":27},{"ruleId":"94","severity":1,"message":"125","line":7,"column":29,"nodeType":"96","messageId":"97","endLine":7,"endColumn":40},{"ruleId":"94","severity":1,"message":"115","line":7,"column":42,"nodeType":"96","messageId":"97","endLine":7,"endColumn":50},{"ruleId":"94","severity":1,"message":"126","line":7,"column":61,"nodeType":"96","messageId":"97","endLine":7,"endColumn":72},{"ruleId":"94","severity":1,"message":"127","line":7,"column":74,"nodeType":"96","messageId":"97","endLine":7,"endColumn":82},{"ruleId":"94","severity":1,"message":"128","line":7,"column":84,"nodeType":"96","messageId":"97","endLine":7,"endColumn":100},{"ruleId":"94","severity":1,"message":"101","line":12,"column":12,"nodeType":"96","messageId":"97","endLine":12,"endColumn":22},{"ruleId":"94","severity":1,"message":"129","line":13,"column":12,"nodeType":"96","messageId":"97","endLine":13,"endColumn":23},{"ruleId":"130","severity":1,"message":"131","line":33,"column":21,"nodeType":"132","endLine":33,"endColumn":101},{"ruleId":"130","severity":1,"message":"131","line":49,"column":25,"nodeType":"132","endLine":49,"endColumn":96},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useImage' is assigned a value but never used.","'useDisplayName' is assigned a value but never used.","'useKnownFor' is assigned a value but never used.","'useActorId' is assigned a value but never used.","'useActorImages' is assigned a value but never used.","'setuseActorImages' is assigned a value but never used.","'isNotActor' is assigned a value but never used.","'useActorbio' is assigned a value but never used.","'setuseActorBio' is assigned a value but never used.","'useActorFilmography' is assigned a value but never used.","'setuseActorFilmography' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setuseActorBio', 'setuseActorFilmography', 'setuseActorImages', and 'useDisplayName'. Either include them or remove the dependency array.","ArrayExpression",["135"],"'useRecoilValue' is defined but never used.","'searchName' is defined but never used.","'knownFor' is defined but never used.","'notActor' is defined but never used.","'useGenres' is assigned a value but never used.","'useRating' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setuseDisplayName', 'setuseGenres', 'setuseImage', 'setusePlot', 'setuseRating', and 'useDisplayName'. Either include them or remove the dependency array.",["136"],["133"],["134"],"'Show' is defined but never used.","'image' is defined but never used.","'displayName' is defined but never used.","'actorImages' is defined but never used.","'actorBio' is defined but never used.","'actorFilmography' is defined but never used.","'useNotActor' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [setuseActorBio, setuseActorFilmography, setuseActorImages, useActorId, useDisplayName]",{"range":"141","text":"142"},"Update the dependencies array to be: [setuseDisplayName, setuseGenres, setuseImage, setusePlot, setuseRating, useActorId, useDisplayName]",{"range":"143","text":"144"},[3138,3150],"[setuseActorBio, setuseActorFilmography, setuseActorImages, useActorId, useDisplayName]",[1792,1804],"[setuseDisplayName, setuseGenres, setuseImage, setusePlot, setuseRating, useActorId, useDisplayName]"]